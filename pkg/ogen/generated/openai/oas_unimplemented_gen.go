// Code generated by ogen, DO NOT EDIT.

package api

import (
	"context"

	ht "github.com/ogen-go/ogen/http"
)

// UnimplementedHandler is no-op Handler which returns http.ErrNotImplemented.
type UnimplementedHandler struct{}

var _ Handler = UnimplementedHandler{}

// CancelFineTuningJob implements cancelFineTuningJob operation.
//
// Immediately cancel a fine-tune job.
//
// POST /fine_tuning/jobs/{fine_tuning_job_id}/cancel
func (UnimplementedHandler) CancelFineTuningJob(ctx context.Context, params CancelFineTuningJobParams) (r *FineTuningJob, _ error) {
	return r, ht.ErrNotImplemented
}

// CancelRun implements cancelRun operation.
//
// Cancels a run that is `in_progress`.
//
// POST /threads/{thread_id}/runs/{run_id}/cancel
func (UnimplementedHandler) CancelRun(ctx context.Context, params CancelRunParams) (r *RunObject, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateAssistant implements createAssistant operation.
//
// Create an assistant with a model and instructions.
//
// POST /assistants
func (UnimplementedHandler) CreateAssistant(ctx context.Context, req *CreateAssistantRequest) (r *AssistantObject, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateAssistantFile implements createAssistantFile operation.
//
// Create an assistant file by attaching a [File](/docs/api-reference/files) to an
// [assistant](/docs/api-reference/assistants).
//
// POST /assistants/{assistant_id}/files
func (UnimplementedHandler) CreateAssistantFile(ctx context.Context, req *CreateAssistantFileRequest, params CreateAssistantFileParams) (r *AssistantFileObject, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateChatCompletion implements createChatCompletion operation.
//
// Creates a model response for the given chat conversation.
//
// POST /chat/completions
func (UnimplementedHandler) CreateChatCompletion(ctx context.Context, req *CreateChatCompletionRequest) (r *CreateChatCompletionResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateFile implements createFile operation.
//
// Upload a file that can be used across various endpoints. The size of all the files uploaded by one
// organization can be up to 100 GB.
// The size of individual files can be a maximum of 512 MB or 2 million tokens for Assistants. See
// the [Assistants Tools guide](/docs/assistants/tools) to learn more about the types of files
// supported. The Fine-tuning API only supports `.jsonl` files.
// Please [contact us](https://help.openai.com/) if you need to increase these storage limits.
//
// POST /files
func (UnimplementedHandler) CreateFile(ctx context.Context, req *CreateFileRequestMultipart) (r *OpenAIFile, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateFineTuningJob implements createFineTuningJob operation.
//
// Creates a fine-tuning job which begins the process of creating a new model from a given dataset.
// Response includes details of the enqueued job including job status and the name of the fine-tuned
// models once complete.
// [Learn more about fine-tuning](/docs/guides/fine-tuning).
//
// POST /fine_tuning/jobs
func (UnimplementedHandler) CreateFineTuningJob(ctx context.Context, req *CreateFineTuningJobRequest) (r *FineTuningJob, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateImage implements createImage operation.
//
// Creates an image given a prompt.
//
// POST /images/generations
func (UnimplementedHandler) CreateImage(ctx context.Context, req *CreateImageRequest) (r *ImagesResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateImageEdit implements createImageEdit operation.
//
// Creates an edited or extended image given an original image and a prompt.
//
// POST /images/edits
func (UnimplementedHandler) CreateImageEdit(ctx context.Context, req *CreateImageEditRequestMultipart) (r *ImagesResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateImageVariation implements createImageVariation operation.
//
// Creates a variation of a given image.
//
// POST /images/variations
func (UnimplementedHandler) CreateImageVariation(ctx context.Context, req *CreateImageVariationRequestMultipart) (r *ImagesResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateMessage implements createMessage operation.
//
// Create a message.
//
// POST /threads/{thread_id}/messages
func (UnimplementedHandler) CreateMessage(ctx context.Context, req *CreateMessageRequest, params CreateMessageParams) (r *MessageObject, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateModeration implements createModeration operation.
//
// Classifies if text is potentially harmful.
//
// POST /moderations
func (UnimplementedHandler) CreateModeration(ctx context.Context, req *CreateModerationRequest) (r *CreateModerationResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateRun implements createRun operation.
//
// Create a run.
//
// POST /threads/{thread_id}/runs
func (UnimplementedHandler) CreateRun(ctx context.Context, req *CreateRunRequest, params CreateRunParams) (r *RunObject, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateSpeech implements createSpeech operation.
//
// Generates audio from the input text.
//
// POST /audio/speech
func (UnimplementedHandler) CreateSpeech(ctx context.Context, req *CreateSpeechRequest) (r *CreateSpeechOKHeaders, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateThread implements createThread operation.
//
// Create a thread.
//
// POST /threads
func (UnimplementedHandler) CreateThread(ctx context.Context, req OptCreateThreadRequest) (r *ThreadObject, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateThreadAndRun implements createThreadAndRun operation.
//
// Create a thread and run it in one request.
//
// POST /threads/runs
func (UnimplementedHandler) CreateThreadAndRun(ctx context.Context, req *CreateThreadAndRunRequest) (r *RunObject, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateTranscription implements createTranscription operation.
//
// Transcribes audio into the input language.
//
// POST /audio/transcriptions
func (UnimplementedHandler) CreateTranscription(ctx context.Context, req *CreateTranscriptionRequestMultipart) (r CreateTranscriptionOK, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateTranslation implements createTranslation operation.
//
// Translates audio into English.
//
// POST /audio/translations
func (UnimplementedHandler) CreateTranslation(ctx context.Context, req *CreateTranslationRequestMultipart) (r CreateTranslationOK, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteAssistant implements deleteAssistant operation.
//
// Delete an assistant.
//
// DELETE /assistants/{assistant_id}
func (UnimplementedHandler) DeleteAssistant(ctx context.Context, params DeleteAssistantParams) (r *DeleteAssistantResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteAssistantFile implements deleteAssistantFile operation.
//
// Delete an assistant file.
//
// DELETE /assistants/{assistant_id}/files/{file_id}
func (UnimplementedHandler) DeleteAssistantFile(ctx context.Context, params DeleteAssistantFileParams) (r *DeleteAssistantFileResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteFile implements deleteFile operation.
//
// Delete a file.
//
// DELETE /files/{file_id}
func (UnimplementedHandler) DeleteFile(ctx context.Context, params DeleteFileParams) (r *DeleteFileResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteModel implements deleteModel operation.
//
// Delete a fine-tuned model. You must have the Owner role in your organization to delete a model.
//
// DELETE /models/{model}
func (UnimplementedHandler) DeleteModel(ctx context.Context, params DeleteModelParams) (r *DeleteModelResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteThread implements deleteThread operation.
//
// Delete a thread.
//
// DELETE /threads/{thread_id}
func (UnimplementedHandler) DeleteThread(ctx context.Context, params DeleteThreadParams) (r *DeleteThreadResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// DownloadFile implements downloadFile operation.
//
// Returns the contents of the specified file.
//
// GET /files/{file_id}/content
func (UnimplementedHandler) DownloadFile(ctx context.Context, params DownloadFileParams) (r string, _ error) {
	return r, ht.ErrNotImplemented
}

// GetAssistant implements getAssistant operation.
//
// Retrieves an assistant.
//
// GET /assistants/{assistant_id}
func (UnimplementedHandler) GetAssistant(ctx context.Context, params GetAssistantParams) (r *AssistantObject, _ error) {
	return r, ht.ErrNotImplemented
}

// GetAssistantFile implements getAssistantFile operation.
//
// Retrieves an AssistantFile.
//
// GET /assistants/{assistant_id}/files/{file_id}
func (UnimplementedHandler) GetAssistantFile(ctx context.Context, params GetAssistantFileParams) (r *AssistantFileObject, _ error) {
	return r, ht.ErrNotImplemented
}

// GetMessage implements getMessage operation.
//
// Retrieve a message.
//
// GET /threads/{thread_id}/messages/{message_id}
func (UnimplementedHandler) GetMessage(ctx context.Context, params GetMessageParams) (r *MessageObject, _ error) {
	return r, ht.ErrNotImplemented
}

// GetMessageFile implements getMessageFile operation.
//
// Retrieves a message file.
//
// GET /threads/{thread_id}/messages/{message_id}/files/{file_id}
func (UnimplementedHandler) GetMessageFile(ctx context.Context, params GetMessageFileParams) (r *MessageFileObject, _ error) {
	return r, ht.ErrNotImplemented
}

// GetRun implements getRun operation.
//
// Retrieves a run.
//
// GET /threads/{thread_id}/runs/{run_id}
func (UnimplementedHandler) GetRun(ctx context.Context, params GetRunParams) (r *RunObject, _ error) {
	return r, ht.ErrNotImplemented
}

// GetRunStep implements getRunStep operation.
//
// Retrieves a run step.
//
// GET /threads/{thread_id}/runs/{run_id}/steps/{step_id}
func (UnimplementedHandler) GetRunStep(ctx context.Context, params GetRunStepParams) (r *RunStepObject, _ error) {
	return r, ht.ErrNotImplemented
}

// GetThread implements getThread operation.
//
// Retrieves a thread.
//
// GET /threads/{thread_id}
func (UnimplementedHandler) GetThread(ctx context.Context, params GetThreadParams) (r *ThreadObject, _ error) {
	return r, ht.ErrNotImplemented
}

// ListAssistantFiles implements listAssistantFiles operation.
//
// Returns a list of assistant files.
//
// GET /assistants/{assistant_id}/files
func (UnimplementedHandler) ListAssistantFiles(ctx context.Context, params ListAssistantFilesParams) (r *ListAssistantFilesResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// ListAssistants implements listAssistants operation.
//
// Returns a list of assistants.
//
// GET /assistants
func (UnimplementedHandler) ListAssistants(ctx context.Context, params ListAssistantsParams) (r *ListAssistantsResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// ListFiles implements listFiles operation.
//
// Returns a list of files that belong to the user's organization.
//
// GET /files
func (UnimplementedHandler) ListFiles(ctx context.Context, params ListFilesParams) (r *ListFilesResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// ListFineTuningEvents implements listFineTuningEvents operation.
//
// Get status updates for a fine-tuning job.
//
// GET /fine_tuning/jobs/{fine_tuning_job_id}/events
func (UnimplementedHandler) ListFineTuningEvents(ctx context.Context, params ListFineTuningEventsParams) (r *ListFineTuningJobEventsResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// ListMessageFiles implements listMessageFiles operation.
//
// Returns a list of message files.
//
// GET /threads/{thread_id}/messages/{message_id}/files
func (UnimplementedHandler) ListMessageFiles(ctx context.Context, params ListMessageFilesParams) (r *ListMessageFilesResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// ListMessages implements listMessages operation.
//
// Returns a list of messages for a given thread.
//
// GET /threads/{thread_id}/messages
func (UnimplementedHandler) ListMessages(ctx context.Context, params ListMessagesParams) (r *ListMessagesResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// ListModels implements listModels operation.
//
// Lists the currently available models, and provides basic information about each one such as the
// owner and availability.
//
// GET /models
func (UnimplementedHandler) ListModels(ctx context.Context) (r *ListModelsResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// ListPaginatedFineTuningJobs implements listPaginatedFineTuningJobs operation.
//
// List your organization's fine-tuning jobs.
//
// GET /fine_tuning/jobs
func (UnimplementedHandler) ListPaginatedFineTuningJobs(ctx context.Context, params ListPaginatedFineTuningJobsParams) (r *ListPaginatedFineTuningJobsResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// ListRunSteps implements listRunSteps operation.
//
// Returns a list of run steps belonging to a run.
//
// GET /threads/{thread_id}/runs/{run_id}/steps
func (UnimplementedHandler) ListRunSteps(ctx context.Context, params ListRunStepsParams) (r *ListRunStepsResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// ListRuns implements listRuns operation.
//
// Returns a list of runs belonging to a thread.
//
// GET /threads/{thread_id}/runs
func (UnimplementedHandler) ListRuns(ctx context.Context, params ListRunsParams) (r *ListRunsResponse, _ error) {
	return r, ht.ErrNotImplemented
}

// ModifyAssistant implements modifyAssistant operation.
//
// Modifies an assistant.
//
// POST /assistants/{assistant_id}
func (UnimplementedHandler) ModifyAssistant(ctx context.Context, req *ModifyAssistantRequest, params ModifyAssistantParams) (r *AssistantObject, _ error) {
	return r, ht.ErrNotImplemented
}

// ModifyMessage implements modifyMessage operation.
//
// Modifies a message.
//
// POST /threads/{thread_id}/messages/{message_id}
func (UnimplementedHandler) ModifyMessage(ctx context.Context, req *ModifyMessageRequest, params ModifyMessageParams) (r *MessageObject, _ error) {
	return r, ht.ErrNotImplemented
}

// ModifyRun implements modifyRun operation.
//
// Modifies a run.
//
// POST /threads/{thread_id}/runs/{run_id}
func (UnimplementedHandler) ModifyRun(ctx context.Context, req *ModifyRunRequest, params ModifyRunParams) (r *RunObject, _ error) {
	return r, ht.ErrNotImplemented
}

// ModifyThread implements modifyThread operation.
//
// Modifies a thread.
//
// POST /threads/{thread_id}
func (UnimplementedHandler) ModifyThread(ctx context.Context, req *ModifyThreadRequest, params ModifyThreadParams) (r *ThreadObject, _ error) {
	return r, ht.ErrNotImplemented
}

// RetrieveFile implements retrieveFile operation.
//
// Returns information about a specific file.
//
// GET /files/{file_id}
func (UnimplementedHandler) RetrieveFile(ctx context.Context, params RetrieveFileParams) (r *OpenAIFile, _ error) {
	return r, ht.ErrNotImplemented
}

// RetrieveFineTuningJob implements retrieveFineTuningJob operation.
//
// Get info about a fine-tuning job.
// [Learn more about fine-tuning](/docs/guides/fine-tuning).
//
// GET /fine_tuning/jobs/{fine_tuning_job_id}
func (UnimplementedHandler) RetrieveFineTuningJob(ctx context.Context, params RetrieveFineTuningJobParams) (r *FineTuningJob, _ error) {
	return r, ht.ErrNotImplemented
}

// RetrieveModel implements retrieveModel operation.
//
// Retrieves a model instance, providing basic information about the model such as the owner and
// permissioning.
//
// GET /models/{model}
func (UnimplementedHandler) RetrieveModel(ctx context.Context, params RetrieveModelParams) (r *Model, _ error) {
	return r, ht.ErrNotImplemented
}

// SubmitToolOuputsToRun implements submitToolOuputsToRun operation.
//
// When a run has the `status: "requires_action"` and `required_action.type` is `submit_tool_outputs`,
//
//	this endpoint can be used to submit the outputs from the tool calls once they're all completed.
//
// All outputs must be submitted in a single request.
//
// POST /threads/{thread_id}/runs/{run_id}/submit_tool_outputs
func (UnimplementedHandler) SubmitToolOuputsToRun(ctx context.Context, req *SubmitToolOutputsRunRequest, params SubmitToolOuputsToRunParams) (r *RunObject, _ error) {
	return r, ht.ErrNotImplemented
}

// NewError creates *ErrorResponseStatusCode from error returned by handler.
//
// Used for common default response.
func (UnimplementedHandler) NewError(ctx context.Context, err error) (r *ErrorResponseStatusCode) {
	r = new(ErrorResponseStatusCode)
	return r
}
